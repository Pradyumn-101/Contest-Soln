 public:
int findDuplicate(vector<int>& arr) {
    // Solving using only constant space
    for(int i = 0; i < arr.size(); i++) {
        int index = arr[i] - 1;
        
        if(arr[index] != arr[i]) {
            swap(arr[i], arr[index]);
            i--; // After swapping, we need to recheck the new element at index i,
                 // as it may also be out of place. Hence, we decrement i to stay
                 // on the same index in the next iteration.
        }
    }
    // At the end of the rearrangement, the duplicate will be at the last position
    return arr[arr.size() - 1];
}
