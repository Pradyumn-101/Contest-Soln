// first try with linear then with binary search

class Solution {
    public int[] successfulPairs(int[] spells, int[] potions, long success) {
        int []pairs = new int[spells.length];
        int lenP = potions.length;
        Arrays.sort(potions);
        
        for (int i=0; i< spells.length; i++) {
            // find first product greater than success
            int left = 0, right = lenP - 1;
            while (left <= right) {
                int mid = (left + right) >> 1;
                long product = (long)spells[i] * potions[mid];
                if (product < success) {
                    left = mid + 1;
                } else {
                    right = mid - 1;
                }
            }
            pairs[i] = lenP - left;
        }

        return pairs;
    }
}
